Terminals unused in grammar

   COMILLA
   COMENTARIO_A
   COMENTARIO_C
   COMENTARIO_I
   .


Gramática

    0 $accept: programa $end

    1 programa: sentencia
    2         | programa sentencia

    3 sentencia: asignacion
    4          | declaracion
    5          | read
    6          | write
    7          | ciclo
    8          | if

    9 $@1: /* vacío */

   10 asignacion: ID $@1 OP_AS expresion

   11 declaracion: INIT LA lista_declaracion LC

   12 lista_declaracion: lista_declaracion lista_id DOS_PUNTOS tipo
   13                  | lista_id DOS_PUNTOS tipo

   14 lista_id: lista_id COMA ID
   15         | ID

   16 tipo: INT
   17     | FLOAT
   18     | STRING

   19 read: READ PA ID PC

   20 write: WRITE PA ID PC
   21      | WRITE PA CONST_STRING PC

   22 ciclo: CICLO PA condicion PC LA programa LC

   23 if: IF PA condicion PC LA programa LC
   24   | IF PA condicion PC LA programa LC ELSE LA programa LC

   25 condicion: comparacion
   26          | condicion AND comparacion
   27          | condicion OR comparacion
   28          | NOT comparacion

   29 comparacion: expresion comparador expresion

   30 comparador: OP_MEN
   31           | OP_MAY
   32           | OP_COMP
   33           | OP_MEN_IGU
   34           | OP_MAY_IGU

   35 expresion: termino
   36          | expresion OP_SUM termino
   37          | expresion OP_RES termino

   38 termino: factor
   39        | termino OP_MUL factor
   40        | termino OP_DIV factor

   41 factor: ID
   42       | CTE
   43       | CONST_REAL
   44       | CONST_STRING
   45       | fibonacci
   46       | PA expresion PC

   47 fibonacci: FIB PA CTE PC
   48          | FIB PA ID PC


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
CTE (258) 42 47
ID (259) 10 14 15 19 20 41 48
OP_AS (260) 10
OP_SUM (261) 36
OP_MUL (262) 39
OP_RES (263) 37
OP_DIV (264) 40
PA (265) 19 20 21 22 23 24 46 47 48
PC (266) 19 20 21 22 23 24 46 47 48
CONST_REAL (267) 43
CONST_STRING (268) 21 44
LA (269) 11 22 23 24
LC (270) 11 22 23 24
COMILLA (271)
DOS_PUNTOS (272) 12 13
COMA (273) 14
COMENTARIO_A (274)
COMENTARIO_C (275)
COMENTARIO_I (276)
CICLO (277) 22
IF (278) 23 24
ELSE (279) 24
INT (280) 16
FLOAT (281) 17
STRING (282) 18
INIT (283) 11
READ (284) 19
WRITE (285) 20 21
AND (286) 26
OR (287) 27
NOT (288) 28
OP_MEN (289) 30
OP_MAY (290) 31
OP_COMP (291) 32
OP_MEN_IGU (292) 33
OP_MAY_IGU (293) 34
FIB (294) 47 48
. (295)


No terminales con las reglas donde aparecen

$accept (41)
    en la izquierda: 0
programa (42)
    en la izquierda: 1 2, en la derecha: 0 2 22 23 24
sentencia (43)
    en la izquierda: 3 4 5 6 7 8, en la derecha: 1 2
asignacion (44)
    en la izquierda: 10, en la derecha: 3
$@1 (45)
    en la izquierda: 9, en la derecha: 10
declaracion (46)
    en la izquierda: 11, en la derecha: 4
lista_declaracion (47)
    en la izquierda: 12 13, en la derecha: 11 12
lista_id (48)
    en la izquierda: 14 15, en la derecha: 12 13 14
tipo (49)
    en la izquierda: 16 17 18, en la derecha: 12 13
read (50)
    en la izquierda: 19, en la derecha: 5
write (51)
    en la izquierda: 20 21, en la derecha: 6
ciclo (52)
    en la izquierda: 22, en la derecha: 7
if (53)
    en la izquierda: 23 24, en la derecha: 8
condicion (54)
    en la izquierda: 25 26 27 28, en la derecha: 22 23 24 26 27
comparacion (55)
    en la izquierda: 29, en la derecha: 25 26 27 28
comparador (56)
    en la izquierda: 30 31 32 33 34, en la derecha: 29
expresion (57)
    en la izquierda: 35 36 37, en la derecha: 10 29 36 37 46
termino (58)
    en la izquierda: 38 39 40, en la derecha: 35 36 37 39 40
factor (59)
    en la izquierda: 41 42 43 44 45 46, en la derecha: 38 39 40
fibonacci (60)
    en la izquierda: 47 48, en la derecha: 45


estado 0

    0 $accept: . programa $end

    ID     desplazar e ir al estado 1
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    programa     ir al estado 7
    sentencia    ir al estado 8
    asignacion   ir al estado 9
    declaracion  ir al estado 10
    read         ir al estado 11
    write        ir al estado 12
    ciclo        ir al estado 13
    if           ir al estado 14


estado 1

   10 asignacion: ID . $@1 OP_AS expresion

    $default  reduce usando la regla 9 ($@1)

    $@1  ir al estado 15


estado 2

   22 ciclo: CICLO . PA condicion PC LA programa LC

    PA  desplazar e ir al estado 16


estado 3

   23 if: IF . PA condicion PC LA programa LC
   24   | IF . PA condicion PC LA programa LC ELSE LA programa LC

    PA  desplazar e ir al estado 17


estado 4

   11 declaracion: INIT . LA lista_declaracion LC

    LA  desplazar e ir al estado 18


estado 5

   19 read: READ . PA ID PC

    PA  desplazar e ir al estado 19


estado 6

   20 write: WRITE . PA ID PC
   21      | WRITE . PA CONST_STRING PC

    PA  desplazar e ir al estado 20


estado 7

    0 $accept: programa . $end
    2 programa: programa . sentencia

    $end   desplazar e ir al estado 21
    ID     desplazar e ir al estado 1
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    sentencia    ir al estado 22
    asignacion   ir al estado 9
    declaracion  ir al estado 10
    read         ir al estado 11
    write        ir al estado 12
    ciclo        ir al estado 13
    if           ir al estado 14


estado 8

    1 programa: sentencia .

    $default  reduce usando la regla 1 (programa)


estado 9

    3 sentencia: asignacion .

    $default  reduce usando la regla 3 (sentencia)


estado 10

    4 sentencia: declaracion .

    $default  reduce usando la regla 4 (sentencia)


estado 11

    5 sentencia: read .

    $default  reduce usando la regla 5 (sentencia)


estado 12

    6 sentencia: write .

    $default  reduce usando la regla 6 (sentencia)


estado 13

    7 sentencia: ciclo .

    $default  reduce usando la regla 7 (sentencia)


estado 14

    8 sentencia: if .

    $default  reduce usando la regla 8 (sentencia)


estado 15

   10 asignacion: ID $@1 . OP_AS expresion

    OP_AS  desplazar e ir al estado 23


estado 16

   22 ciclo: CICLO PA . condicion PC LA programa LC

    CTE           desplazar e ir al estado 24
    ID            desplazar e ir al estado 25
    PA            desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    CONST_STRING  desplazar e ir al estado 28
    NOT           desplazar e ir al estado 29
    FIB           desplazar e ir al estado 30

    condicion    ir al estado 31
    comparacion  ir al estado 32
    expresion    ir al estado 33
    termino      ir al estado 34
    factor       ir al estado 35
    fibonacci    ir al estado 36


estado 17

   23 if: IF PA . condicion PC LA programa LC
   24   | IF PA . condicion PC LA programa LC ELSE LA programa LC

    CTE           desplazar e ir al estado 24
    ID            desplazar e ir al estado 25
    PA            desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    CONST_STRING  desplazar e ir al estado 28
    NOT           desplazar e ir al estado 29
    FIB           desplazar e ir al estado 30

    condicion    ir al estado 37
    comparacion  ir al estado 32
    expresion    ir al estado 33
    termino      ir al estado 34
    factor       ir al estado 35
    fibonacci    ir al estado 36


estado 18

   11 declaracion: INIT LA . lista_declaracion LC

    ID  desplazar e ir al estado 38

    lista_declaracion  ir al estado 39
    lista_id           ir al estado 40


estado 19

   19 read: READ PA . ID PC

    ID  desplazar e ir al estado 41


estado 20

   20 write: WRITE PA . ID PC
   21      | WRITE PA . CONST_STRING PC

    ID            desplazar e ir al estado 42
    CONST_STRING  desplazar e ir al estado 43


estado 21

    0 $accept: programa $end .

    $default  aceptar


estado 22

    2 programa: programa sentencia .

    $default  reduce usando la regla 2 (programa)


estado 23

   10 asignacion: ID $@1 OP_AS . expresion

    CTE           desplazar e ir al estado 24
    ID            desplazar e ir al estado 25
    PA            desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    CONST_STRING  desplazar e ir al estado 28
    FIB           desplazar e ir al estado 30

    expresion  ir al estado 44
    termino    ir al estado 34
    factor     ir al estado 35
    fibonacci  ir al estado 36


estado 24

   42 factor: CTE .

    $default  reduce usando la regla 42 (factor)


estado 25

   41 factor: ID .

    $default  reduce usando la regla 41 (factor)


estado 26

   46 factor: PA . expresion PC

    CTE           desplazar e ir al estado 24
    ID            desplazar e ir al estado 25
    PA            desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    CONST_STRING  desplazar e ir al estado 28
    FIB           desplazar e ir al estado 30

    expresion  ir al estado 45
    termino    ir al estado 34
    factor     ir al estado 35
    fibonacci  ir al estado 36


estado 27

   43 factor: CONST_REAL .

    $default  reduce usando la regla 43 (factor)


estado 28

   44 factor: CONST_STRING .

    $default  reduce usando la regla 44 (factor)


estado 29

   28 condicion: NOT . comparacion

    CTE           desplazar e ir al estado 24
    ID            desplazar e ir al estado 25
    PA            desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    CONST_STRING  desplazar e ir al estado 28
    FIB           desplazar e ir al estado 30

    comparacion  ir al estado 46
    expresion    ir al estado 33
    termino      ir al estado 34
    factor       ir al estado 35
    fibonacci    ir al estado 36


estado 30

   47 fibonacci: FIB . PA CTE PC
   48          | FIB . PA ID PC

    PA  desplazar e ir al estado 47


estado 31

   22 ciclo: CICLO PA condicion . PC LA programa LC
   26 condicion: condicion . AND comparacion
   27          | condicion . OR comparacion

    PC   desplazar e ir al estado 48
    AND  desplazar e ir al estado 49
    OR   desplazar e ir al estado 50


estado 32

   25 condicion: comparacion .

    $default  reduce usando la regla 25 (condicion)


estado 33

   29 comparacion: expresion . comparador expresion
   36 expresion: expresion . OP_SUM termino
   37          | expresion . OP_RES termino

    OP_SUM      desplazar e ir al estado 51
    OP_RES      desplazar e ir al estado 52
    OP_MEN      desplazar e ir al estado 53
    OP_MAY      desplazar e ir al estado 54
    OP_COMP     desplazar e ir al estado 55
    OP_MEN_IGU  desplazar e ir al estado 56
    OP_MAY_IGU  desplazar e ir al estado 57

    comparador  ir al estado 58


estado 34

   35 expresion: termino .
   39 termino: termino . OP_MUL factor
   40        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 59
    OP_DIV  desplazar e ir al estado 60

    $default  reduce usando la regla 35 (expresion)


estado 35

   38 termino: factor .

    $default  reduce usando la regla 38 (termino)


estado 36

   45 factor: fibonacci .

    $default  reduce usando la regla 45 (factor)


estado 37

   23 if: IF PA condicion . PC LA programa LC
   24   | IF PA condicion . PC LA programa LC ELSE LA programa LC
   26 condicion: condicion . AND comparacion
   27          | condicion . OR comparacion

    PC   desplazar e ir al estado 61
    AND  desplazar e ir al estado 49
    OR   desplazar e ir al estado 50


estado 38

   15 lista_id: ID .

    $default  reduce usando la regla 15 (lista_id)


estado 39

   11 declaracion: INIT LA lista_declaracion . LC
   12 lista_declaracion: lista_declaracion . lista_id DOS_PUNTOS tipo

    ID  desplazar e ir al estado 38
    LC  desplazar e ir al estado 62

    lista_id  ir al estado 63


estado 40

   13 lista_declaracion: lista_id . DOS_PUNTOS tipo
   14 lista_id: lista_id . COMA ID

    DOS_PUNTOS  desplazar e ir al estado 64
    COMA        desplazar e ir al estado 65


estado 41

   19 read: READ PA ID . PC

    PC  desplazar e ir al estado 66


estado 42

   20 write: WRITE PA ID . PC

    PC  desplazar e ir al estado 67


estado 43

   21 write: WRITE PA CONST_STRING . PC

    PC  desplazar e ir al estado 68


estado 44

   10 asignacion: ID $@1 OP_AS expresion .
   36 expresion: expresion . OP_SUM termino
   37          | expresion . OP_RES termino

    OP_SUM  desplazar e ir al estado 51
    OP_RES  desplazar e ir al estado 52

    $default  reduce usando la regla 10 (asignacion)


estado 45

   36 expresion: expresion . OP_SUM termino
   37          | expresion . OP_RES termino
   46 factor: PA expresion . PC

    OP_SUM  desplazar e ir al estado 51
    OP_RES  desplazar e ir al estado 52
    PC      desplazar e ir al estado 69


estado 46

   28 condicion: NOT comparacion .

    $default  reduce usando la regla 28 (condicion)


estado 47

   47 fibonacci: FIB PA . CTE PC
   48          | FIB PA . ID PC

    CTE  desplazar e ir al estado 70
    ID   desplazar e ir al estado 71


estado 48

   22 ciclo: CICLO PA condicion PC . LA programa LC

    LA  desplazar e ir al estado 72


estado 49

   26 condicion: condicion AND . comparacion

    CTE           desplazar e ir al estado 24
    ID            desplazar e ir al estado 25
    PA            desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    CONST_STRING  desplazar e ir al estado 28
    FIB           desplazar e ir al estado 30

    comparacion  ir al estado 73
    expresion    ir al estado 33
    termino      ir al estado 34
    factor       ir al estado 35
    fibonacci    ir al estado 36


estado 50

   27 condicion: condicion OR . comparacion

    CTE           desplazar e ir al estado 24
    ID            desplazar e ir al estado 25
    PA            desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    CONST_STRING  desplazar e ir al estado 28
    FIB           desplazar e ir al estado 30

    comparacion  ir al estado 74
    expresion    ir al estado 33
    termino      ir al estado 34
    factor       ir al estado 35
    fibonacci    ir al estado 36


estado 51

   36 expresion: expresion OP_SUM . termino

    CTE           desplazar e ir al estado 24
    ID            desplazar e ir al estado 25
    PA            desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    CONST_STRING  desplazar e ir al estado 28
    FIB           desplazar e ir al estado 30

    termino    ir al estado 75
    factor     ir al estado 35
    fibonacci  ir al estado 36


estado 52

   37 expresion: expresion OP_RES . termino

    CTE           desplazar e ir al estado 24
    ID            desplazar e ir al estado 25
    PA            desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    CONST_STRING  desplazar e ir al estado 28
    FIB           desplazar e ir al estado 30

    termino    ir al estado 76
    factor     ir al estado 35
    fibonacci  ir al estado 36


estado 53

   30 comparador: OP_MEN .

    $default  reduce usando la regla 30 (comparador)


estado 54

   31 comparador: OP_MAY .

    $default  reduce usando la regla 31 (comparador)


estado 55

   32 comparador: OP_COMP .

    $default  reduce usando la regla 32 (comparador)


estado 56

   33 comparador: OP_MEN_IGU .

    $default  reduce usando la regla 33 (comparador)


estado 57

   34 comparador: OP_MAY_IGU .

    $default  reduce usando la regla 34 (comparador)


estado 58

   29 comparacion: expresion comparador . expresion

    CTE           desplazar e ir al estado 24
    ID            desplazar e ir al estado 25
    PA            desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    CONST_STRING  desplazar e ir al estado 28
    FIB           desplazar e ir al estado 30

    expresion  ir al estado 77
    termino    ir al estado 34
    factor     ir al estado 35
    fibonacci  ir al estado 36


estado 59

   39 termino: termino OP_MUL . factor

    CTE           desplazar e ir al estado 24
    ID            desplazar e ir al estado 25
    PA            desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    CONST_STRING  desplazar e ir al estado 28
    FIB           desplazar e ir al estado 30

    factor     ir al estado 78
    fibonacci  ir al estado 36


estado 60

   40 termino: termino OP_DIV . factor

    CTE           desplazar e ir al estado 24
    ID            desplazar e ir al estado 25
    PA            desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    CONST_STRING  desplazar e ir al estado 28
    FIB           desplazar e ir al estado 30

    factor     ir al estado 79
    fibonacci  ir al estado 36


estado 61

   23 if: IF PA condicion PC . LA programa LC
   24   | IF PA condicion PC . LA programa LC ELSE LA programa LC

    LA  desplazar e ir al estado 80


estado 62

   11 declaracion: INIT LA lista_declaracion LC .

    $default  reduce usando la regla 11 (declaracion)


estado 63

   12 lista_declaracion: lista_declaracion lista_id . DOS_PUNTOS tipo
   14 lista_id: lista_id . COMA ID

    DOS_PUNTOS  desplazar e ir al estado 81
    COMA        desplazar e ir al estado 65


estado 64

   13 lista_declaracion: lista_id DOS_PUNTOS . tipo

    INT     desplazar e ir al estado 82
    FLOAT   desplazar e ir al estado 83
    STRING  desplazar e ir al estado 84

    tipo  ir al estado 85


estado 65

   14 lista_id: lista_id COMA . ID

    ID  desplazar e ir al estado 86


estado 66

   19 read: READ PA ID PC .

    $default  reduce usando la regla 19 (read)


estado 67

   20 write: WRITE PA ID PC .

    $default  reduce usando la regla 20 (write)


estado 68

   21 write: WRITE PA CONST_STRING PC .

    $default  reduce usando la regla 21 (write)


estado 69

   46 factor: PA expresion PC .

    $default  reduce usando la regla 46 (factor)


estado 70

   47 fibonacci: FIB PA CTE . PC

    PC  desplazar e ir al estado 87


estado 71

   48 fibonacci: FIB PA ID . PC

    PC  desplazar e ir al estado 88


estado 72

   22 ciclo: CICLO PA condicion PC LA . programa LC

    ID     desplazar e ir al estado 1
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    programa     ir al estado 89
    sentencia    ir al estado 8
    asignacion   ir al estado 9
    declaracion  ir al estado 10
    read         ir al estado 11
    write        ir al estado 12
    ciclo        ir al estado 13
    if           ir al estado 14


estado 73

   26 condicion: condicion AND comparacion .

    $default  reduce usando la regla 26 (condicion)


estado 74

   27 condicion: condicion OR comparacion .

    $default  reduce usando la regla 27 (condicion)


estado 75

   36 expresion: expresion OP_SUM termino .
   39 termino: termino . OP_MUL factor
   40        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 59
    OP_DIV  desplazar e ir al estado 60

    $default  reduce usando la regla 36 (expresion)


estado 76

   37 expresion: expresion OP_RES termino .
   39 termino: termino . OP_MUL factor
   40        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 59
    OP_DIV  desplazar e ir al estado 60

    $default  reduce usando la regla 37 (expresion)


estado 77

   29 comparacion: expresion comparador expresion .
   36 expresion: expresion . OP_SUM termino
   37          | expresion . OP_RES termino

    OP_SUM  desplazar e ir al estado 51
    OP_RES  desplazar e ir al estado 52

    $default  reduce usando la regla 29 (comparacion)


estado 78

   39 termino: termino OP_MUL factor .

    $default  reduce usando la regla 39 (termino)


estado 79

   40 termino: termino OP_DIV factor .

    $default  reduce usando la regla 40 (termino)


estado 80

   23 if: IF PA condicion PC LA . programa LC
   24   | IF PA condicion PC LA . programa LC ELSE LA programa LC

    ID     desplazar e ir al estado 1
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    programa     ir al estado 90
    sentencia    ir al estado 8
    asignacion   ir al estado 9
    declaracion  ir al estado 10
    read         ir al estado 11
    write        ir al estado 12
    ciclo        ir al estado 13
    if           ir al estado 14


estado 81

   12 lista_declaracion: lista_declaracion lista_id DOS_PUNTOS . tipo

    INT     desplazar e ir al estado 82
    FLOAT   desplazar e ir al estado 83
    STRING  desplazar e ir al estado 84

    tipo  ir al estado 91


estado 82

   16 tipo: INT .

    $default  reduce usando la regla 16 (tipo)


estado 83

   17 tipo: FLOAT .

    $default  reduce usando la regla 17 (tipo)


estado 84

   18 tipo: STRING .

    $default  reduce usando la regla 18 (tipo)


estado 85

   13 lista_declaracion: lista_id DOS_PUNTOS tipo .

    $default  reduce usando la regla 13 (lista_declaracion)


estado 86

   14 lista_id: lista_id COMA ID .

    $default  reduce usando la regla 14 (lista_id)


estado 87

   47 fibonacci: FIB PA CTE PC .

    $default  reduce usando la regla 47 (fibonacci)


estado 88

   48 fibonacci: FIB PA ID PC .

    $default  reduce usando la regla 48 (fibonacci)


estado 89

    2 programa: programa . sentencia
   22 ciclo: CICLO PA condicion PC LA programa . LC

    ID     desplazar e ir al estado 1
    LC     desplazar e ir al estado 92
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    sentencia    ir al estado 22
    asignacion   ir al estado 9
    declaracion  ir al estado 10
    read         ir al estado 11
    write        ir al estado 12
    ciclo        ir al estado 13
    if           ir al estado 14


estado 90

    2 programa: programa . sentencia
   23 if: IF PA condicion PC LA programa . LC
   24   | IF PA condicion PC LA programa . LC ELSE LA programa LC

    ID     desplazar e ir al estado 1
    LC     desplazar e ir al estado 93
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    sentencia    ir al estado 22
    asignacion   ir al estado 9
    declaracion  ir al estado 10
    read         ir al estado 11
    write        ir al estado 12
    ciclo        ir al estado 13
    if           ir al estado 14


estado 91

   12 lista_declaracion: lista_declaracion lista_id DOS_PUNTOS tipo .

    $default  reduce usando la regla 12 (lista_declaracion)


estado 92

   22 ciclo: CICLO PA condicion PC LA programa LC .

    $default  reduce usando la regla 22 (ciclo)


estado 93

   23 if: IF PA condicion PC LA programa LC .
   24   | IF PA condicion PC LA programa LC . ELSE LA programa LC

    ELSE  desplazar e ir al estado 94

    $default  reduce usando la regla 23 (if)


estado 94

   24 if: IF PA condicion PC LA programa LC ELSE . LA programa LC

    LA  desplazar e ir al estado 95


estado 95

   24 if: IF PA condicion PC LA programa LC ELSE LA . programa LC

    ID     desplazar e ir al estado 1
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    programa     ir al estado 96
    sentencia    ir al estado 8
    asignacion   ir al estado 9
    declaracion  ir al estado 10
    read         ir al estado 11
    write        ir al estado 12
    ciclo        ir al estado 13
    if           ir al estado 14


estado 96

    2 programa: programa . sentencia
   24 if: IF PA condicion PC LA programa LC ELSE LA programa . LC

    ID     desplazar e ir al estado 1
    LC     desplazar e ir al estado 97
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    sentencia    ir al estado 22
    asignacion   ir al estado 9
    declaracion  ir al estado 10
    read         ir al estado 11
    write        ir al estado 12
    ciclo        ir al estado 13
    if           ir al estado 14


estado 97

   24 if: IF PA condicion PC LA programa LC ELSE LA programa LC .

    $default  reduce usando la regla 24 (if)
