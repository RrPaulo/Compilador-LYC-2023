Terminals unused in grammar

   COMILLA
   .


Gramática

    0 $accept: start $end

    1 start: programa

    2 programa: sentencia
    3         | programa sentencia

    4 sentencia: asignacion
    5          | declaracion
    6          | read
    7          | write
    8          | ciclo
    9          | if

   10 $@1: /* vacío */

   11 asignacion: ID $@1 OP_AS expresion

   12 declaracion: INIT LA lista_declaracion LC

   13 lista_declaracion: lista_declaracion lista_id DOS_PUNTOS tipo
   14                  | lista_id DOS_PUNTOS tipo

   15 lista_id: lista_id COMA ID
   16         | ID

   17 tipo: INT
   18     | FLOAT
   19     | STRING

   20 read: READ PA ID PC

   21 $@2: /* vacío */

   22 write: WRITE PA ID $@2 PC

   23 $@3: /* vacío */

   24 write: WRITE PA CONST_STRING $@3 PC

   25 $@4: /* vacío */

   26 ciclo: CICLO $@4 PA condicion PC LA programa LC

   27 if: IF PA condicion PC LA programa LC
   28   | IF PA condicion PC LA programa FT ELSE LA programa LC

   29 FT: LC

   30 condicion: comparacion
   31          | condicion AND comparacion
   32          | condicion OR comparacion
   33          | NOT comparacion

   34 comparacion: expresion comparador expresion

   35 comparador: OP_MEN
   36           | OP_MAY
   37           | OP_COMP
   38           | OP_MEN_IGU
   39           | OP_MAY_IGU

   40 expresion: termino
   41          | expresion OP_SUM termino
   42          | expresion OP_RES termino

   43 termino: factor
   44        | termino OP_MUL factor
   45        | termino OP_DIV factor

   46 factor: ID
   47       | CTE
   48       | CONST_REAL
   49       | CONST_STRING
   50       | PA expresion PC
   51       | fibonacci

   52 $@5: /* vacío */

   53 fibonacci: FIB PA CTE $@5 PC
   54          | FIB PA ID PC


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
CTE (258) 47 53
ID (259) 11 15 16 20 22 46 54
OP_AS (260) 11
OP_SUM (261) 41
OP_MUL (262) 44
OP_RES (263) 42
OP_DIV (264) 45
PA (265) 20 22 24 26 27 28 50 53 54
PC (266) 20 22 24 26 27 28 50 53 54
CONST_REAL (267) 48
CONST_STRING (268) 24 49
LA (269) 12 26 27 28
LC (270) 12 26 27 28 29
DOS_PUNTOS (271) 13 14
COMA (272) 15
CICLO (273) 26
IF (274) 27 28
ELSE (275) 28
INT (276) 17
FLOAT (277) 18
STRING (278) 19
INIT (279) 12
READ (280) 20
WRITE (281) 22 24
AND (282) 31
OR (283) 32
NOT (284) 33
OP_MEN (285) 35
OP_MAY (286) 36
OP_COMP (287) 37
OP_MEN_IGU (288) 38
OP_MAY_IGU (289) 39
FIB (290) 53 54
COMILLA (291)
. (292)


No terminales con las reglas donde aparecen

$accept (38)
    en la izquierda: 0
start (39)
    en la izquierda: 1, en la derecha: 0
programa (40)
    en la izquierda: 2 3, en la derecha: 1 3 26 27 28
sentencia (41)
    en la izquierda: 4 5 6 7 8 9, en la derecha: 2 3
asignacion (42)
    en la izquierda: 11, en la derecha: 4
$@1 (43)
    en la izquierda: 10, en la derecha: 11
declaracion (44)
    en la izquierda: 12, en la derecha: 5
lista_declaracion (45)
    en la izquierda: 13 14, en la derecha: 12 13
lista_id (46)
    en la izquierda: 15 16, en la derecha: 13 14 15
tipo (47)
    en la izquierda: 17 18 19, en la derecha: 13 14
read (48)
    en la izquierda: 20, en la derecha: 6
write (49)
    en la izquierda: 22 24, en la derecha: 7
$@2 (50)
    en la izquierda: 21, en la derecha: 22
$@3 (51)
    en la izquierda: 23, en la derecha: 24
ciclo (52)
    en la izquierda: 26, en la derecha: 8
$@4 (53)
    en la izquierda: 25, en la derecha: 26
if (54)
    en la izquierda: 27 28, en la derecha: 9
FT (55)
    en la izquierda: 29, en la derecha: 28
condicion (56)
    en la izquierda: 30 31 32 33, en la derecha: 26 27 28 31 32
comparacion (57)
    en la izquierda: 34, en la derecha: 30 31 32 33
comparador (58)
    en la izquierda: 35 36 37 38 39, en la derecha: 34
expresion (59)
    en la izquierda: 40 41 42, en la derecha: 11 34 41 42 50
termino (60)
    en la izquierda: 43 44 45, en la derecha: 40 41 42 44 45
factor (61)
    en la izquierda: 46 47 48 49 50 51, en la derecha: 43 44 45
fibonacci (62)
    en la izquierda: 53 54, en la derecha: 51
$@5 (63)
    en la izquierda: 52, en la derecha: 53


estado 0

    0 $accept: . start $end

    ID     desplazar e ir al estado 1
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    start        ir al estado 7
    programa     ir al estado 8
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    read         ir al estado 12
    write        ir al estado 13
    ciclo        ir al estado 14
    if           ir al estado 15


estado 1

   11 asignacion: ID . $@1 OP_AS expresion

    $default  reduce usando la regla 10 ($@1)

    $@1  ir al estado 16


estado 2

   26 ciclo: CICLO . $@4 PA condicion PC LA programa LC

    $default  reduce usando la regla 25 ($@4)

    $@4  ir al estado 17


estado 3

   27 if: IF . PA condicion PC LA programa LC
   28   | IF . PA condicion PC LA programa FT ELSE LA programa LC

    PA  desplazar e ir al estado 18


estado 4

   12 declaracion: INIT . LA lista_declaracion LC

    LA  desplazar e ir al estado 19


estado 5

   20 read: READ . PA ID PC

    PA  desplazar e ir al estado 20


estado 6

   22 write: WRITE . PA ID $@2 PC
   24      | WRITE . PA CONST_STRING $@3 PC

    PA  desplazar e ir al estado 21


estado 7

    0 $accept: start . $end

    $end  desplazar e ir al estado 22


estado 8

    1 start: programa .
    3 programa: programa . sentencia

    ID     desplazar e ir al estado 1
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    $default  reduce usando la regla 1 (start)

    sentencia    ir al estado 23
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    read         ir al estado 12
    write        ir al estado 13
    ciclo        ir al estado 14
    if           ir al estado 15


estado 9

    2 programa: sentencia .

    $default  reduce usando la regla 2 (programa)


estado 10

    4 sentencia: asignacion .

    $default  reduce usando la regla 4 (sentencia)


estado 11

    5 sentencia: declaracion .

    $default  reduce usando la regla 5 (sentencia)


estado 12

    6 sentencia: read .

    $default  reduce usando la regla 6 (sentencia)


estado 13

    7 sentencia: write .

    $default  reduce usando la regla 7 (sentencia)


estado 14

    8 sentencia: ciclo .

    $default  reduce usando la regla 8 (sentencia)


estado 15

    9 sentencia: if .

    $default  reduce usando la regla 9 (sentencia)


estado 16

   11 asignacion: ID $@1 . OP_AS expresion

    OP_AS  desplazar e ir al estado 24


estado 17

   26 ciclo: CICLO $@4 . PA condicion PC LA programa LC

    PA  desplazar e ir al estado 25


estado 18

   27 if: IF PA . condicion PC LA programa LC
   28   | IF PA . condicion PC LA programa FT ELSE LA programa LC

    CTE           desplazar e ir al estado 26
    ID            desplazar e ir al estado 27
    PA            desplazar e ir al estado 28
    CONST_REAL    desplazar e ir al estado 29
    CONST_STRING  desplazar e ir al estado 30
    NOT           desplazar e ir al estado 31
    FIB           desplazar e ir al estado 32

    condicion    ir al estado 33
    comparacion  ir al estado 34
    expresion    ir al estado 35
    termino      ir al estado 36
    factor       ir al estado 37
    fibonacci    ir al estado 38


estado 19

   12 declaracion: INIT LA . lista_declaracion LC

    ID  desplazar e ir al estado 39

    lista_declaracion  ir al estado 40
    lista_id           ir al estado 41


estado 20

   20 read: READ PA . ID PC

    ID  desplazar e ir al estado 42


estado 21

   22 write: WRITE PA . ID $@2 PC
   24      | WRITE PA . CONST_STRING $@3 PC

    ID            desplazar e ir al estado 43
    CONST_STRING  desplazar e ir al estado 44


estado 22

    0 $accept: start $end .

    $default  aceptar


estado 23

    3 programa: programa sentencia .

    $default  reduce usando la regla 3 (programa)


estado 24

   11 asignacion: ID $@1 OP_AS . expresion

    CTE           desplazar e ir al estado 26
    ID            desplazar e ir al estado 27
    PA            desplazar e ir al estado 28
    CONST_REAL    desplazar e ir al estado 29
    CONST_STRING  desplazar e ir al estado 30
    FIB           desplazar e ir al estado 32

    expresion  ir al estado 45
    termino    ir al estado 36
    factor     ir al estado 37
    fibonacci  ir al estado 38


estado 25

   26 ciclo: CICLO $@4 PA . condicion PC LA programa LC

    CTE           desplazar e ir al estado 26
    ID            desplazar e ir al estado 27
    PA            desplazar e ir al estado 28
    CONST_REAL    desplazar e ir al estado 29
    CONST_STRING  desplazar e ir al estado 30
    NOT           desplazar e ir al estado 31
    FIB           desplazar e ir al estado 32

    condicion    ir al estado 46
    comparacion  ir al estado 34
    expresion    ir al estado 35
    termino      ir al estado 36
    factor       ir al estado 37
    fibonacci    ir al estado 38


estado 26

   47 factor: CTE .

    $default  reduce usando la regla 47 (factor)


estado 27

   46 factor: ID .

    $default  reduce usando la regla 46 (factor)


estado 28

   50 factor: PA . expresion PC

    CTE           desplazar e ir al estado 26
    ID            desplazar e ir al estado 27
    PA            desplazar e ir al estado 28
    CONST_REAL    desplazar e ir al estado 29
    CONST_STRING  desplazar e ir al estado 30
    FIB           desplazar e ir al estado 32

    expresion  ir al estado 47
    termino    ir al estado 36
    factor     ir al estado 37
    fibonacci  ir al estado 38


estado 29

   48 factor: CONST_REAL .

    $default  reduce usando la regla 48 (factor)


estado 30

   49 factor: CONST_STRING .

    $default  reduce usando la regla 49 (factor)


estado 31

   33 condicion: NOT . comparacion

    CTE           desplazar e ir al estado 26
    ID            desplazar e ir al estado 27
    PA            desplazar e ir al estado 28
    CONST_REAL    desplazar e ir al estado 29
    CONST_STRING  desplazar e ir al estado 30
    FIB           desplazar e ir al estado 32

    comparacion  ir al estado 48
    expresion    ir al estado 35
    termino      ir al estado 36
    factor       ir al estado 37
    fibonacci    ir al estado 38


estado 32

   53 fibonacci: FIB . PA CTE $@5 PC
   54          | FIB . PA ID PC

    PA  desplazar e ir al estado 49


estado 33

   27 if: IF PA condicion . PC LA programa LC
   28   | IF PA condicion . PC LA programa FT ELSE LA programa LC
   31 condicion: condicion . AND comparacion
   32          | condicion . OR comparacion

    PC   desplazar e ir al estado 50
    AND  desplazar e ir al estado 51
    OR   desplazar e ir al estado 52


estado 34

   30 condicion: comparacion .

    $default  reduce usando la regla 30 (condicion)


estado 35

   34 comparacion: expresion . comparador expresion
   41 expresion: expresion . OP_SUM termino
   42          | expresion . OP_RES termino

    OP_SUM      desplazar e ir al estado 53
    OP_RES      desplazar e ir al estado 54
    OP_MEN      desplazar e ir al estado 55
    OP_MAY      desplazar e ir al estado 56
    OP_COMP     desplazar e ir al estado 57
    OP_MEN_IGU  desplazar e ir al estado 58
    OP_MAY_IGU  desplazar e ir al estado 59

    comparador  ir al estado 60


estado 36

   40 expresion: termino .
   44 termino: termino . OP_MUL factor
   45        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 61
    OP_DIV  desplazar e ir al estado 62

    $default  reduce usando la regla 40 (expresion)


estado 37

   43 termino: factor .

    $default  reduce usando la regla 43 (termino)


estado 38

   51 factor: fibonacci .

    $default  reduce usando la regla 51 (factor)


estado 39

   16 lista_id: ID .

    $default  reduce usando la regla 16 (lista_id)


estado 40

   12 declaracion: INIT LA lista_declaracion . LC
   13 lista_declaracion: lista_declaracion . lista_id DOS_PUNTOS tipo

    ID  desplazar e ir al estado 39
    LC  desplazar e ir al estado 63

    lista_id  ir al estado 64


estado 41

   14 lista_declaracion: lista_id . DOS_PUNTOS tipo
   15 lista_id: lista_id . COMA ID

    DOS_PUNTOS  desplazar e ir al estado 65
    COMA        desplazar e ir al estado 66


estado 42

   20 read: READ PA ID . PC

    PC  desplazar e ir al estado 67


estado 43

   22 write: WRITE PA ID . $@2 PC

    $default  reduce usando la regla 21 ($@2)

    $@2  ir al estado 68


estado 44

   24 write: WRITE PA CONST_STRING . $@3 PC

    $default  reduce usando la regla 23 ($@3)

    $@3  ir al estado 69


estado 45

   11 asignacion: ID $@1 OP_AS expresion .
   41 expresion: expresion . OP_SUM termino
   42          | expresion . OP_RES termino

    OP_SUM  desplazar e ir al estado 53
    OP_RES  desplazar e ir al estado 54

    $default  reduce usando la regla 11 (asignacion)


estado 46

   26 ciclo: CICLO $@4 PA condicion . PC LA programa LC
   31 condicion: condicion . AND comparacion
   32          | condicion . OR comparacion

    PC   desplazar e ir al estado 70
    AND  desplazar e ir al estado 51
    OR   desplazar e ir al estado 52


estado 47

   41 expresion: expresion . OP_SUM termino
   42          | expresion . OP_RES termino
   50 factor: PA expresion . PC

    OP_SUM  desplazar e ir al estado 53
    OP_RES  desplazar e ir al estado 54
    PC      desplazar e ir al estado 71


estado 48

   33 condicion: NOT comparacion .

    $default  reduce usando la regla 33 (condicion)


estado 49

   53 fibonacci: FIB PA . CTE $@5 PC
   54          | FIB PA . ID PC

    CTE  desplazar e ir al estado 72
    ID   desplazar e ir al estado 73


estado 50

   27 if: IF PA condicion PC . LA programa LC
   28   | IF PA condicion PC . LA programa FT ELSE LA programa LC

    LA  desplazar e ir al estado 74


estado 51

   31 condicion: condicion AND . comparacion

    CTE           desplazar e ir al estado 26
    ID            desplazar e ir al estado 27
    PA            desplazar e ir al estado 28
    CONST_REAL    desplazar e ir al estado 29
    CONST_STRING  desplazar e ir al estado 30
    FIB           desplazar e ir al estado 32

    comparacion  ir al estado 75
    expresion    ir al estado 35
    termino      ir al estado 36
    factor       ir al estado 37
    fibonacci    ir al estado 38


estado 52

   32 condicion: condicion OR . comparacion

    CTE           desplazar e ir al estado 26
    ID            desplazar e ir al estado 27
    PA            desplazar e ir al estado 28
    CONST_REAL    desplazar e ir al estado 29
    CONST_STRING  desplazar e ir al estado 30
    FIB           desplazar e ir al estado 32

    comparacion  ir al estado 76
    expresion    ir al estado 35
    termino      ir al estado 36
    factor       ir al estado 37
    fibonacci    ir al estado 38


estado 53

   41 expresion: expresion OP_SUM . termino

    CTE           desplazar e ir al estado 26
    ID            desplazar e ir al estado 27
    PA            desplazar e ir al estado 28
    CONST_REAL    desplazar e ir al estado 29
    CONST_STRING  desplazar e ir al estado 30
    FIB           desplazar e ir al estado 32

    termino    ir al estado 77
    factor     ir al estado 37
    fibonacci  ir al estado 38


estado 54

   42 expresion: expresion OP_RES . termino

    CTE           desplazar e ir al estado 26
    ID            desplazar e ir al estado 27
    PA            desplazar e ir al estado 28
    CONST_REAL    desplazar e ir al estado 29
    CONST_STRING  desplazar e ir al estado 30
    FIB           desplazar e ir al estado 32

    termino    ir al estado 78
    factor     ir al estado 37
    fibonacci  ir al estado 38


estado 55

   35 comparador: OP_MEN .

    $default  reduce usando la regla 35 (comparador)


estado 56

   36 comparador: OP_MAY .

    $default  reduce usando la regla 36 (comparador)


estado 57

   37 comparador: OP_COMP .

    $default  reduce usando la regla 37 (comparador)


estado 58

   38 comparador: OP_MEN_IGU .

    $default  reduce usando la regla 38 (comparador)


estado 59

   39 comparador: OP_MAY_IGU .

    $default  reduce usando la regla 39 (comparador)


estado 60

   34 comparacion: expresion comparador . expresion

    CTE           desplazar e ir al estado 26
    ID            desplazar e ir al estado 27
    PA            desplazar e ir al estado 28
    CONST_REAL    desplazar e ir al estado 29
    CONST_STRING  desplazar e ir al estado 30
    FIB           desplazar e ir al estado 32

    expresion  ir al estado 79
    termino    ir al estado 36
    factor     ir al estado 37
    fibonacci  ir al estado 38


estado 61

   44 termino: termino OP_MUL . factor

    CTE           desplazar e ir al estado 26
    ID            desplazar e ir al estado 27
    PA            desplazar e ir al estado 28
    CONST_REAL    desplazar e ir al estado 29
    CONST_STRING  desplazar e ir al estado 30
    FIB           desplazar e ir al estado 32

    factor     ir al estado 80
    fibonacci  ir al estado 38


estado 62

   45 termino: termino OP_DIV . factor

    CTE           desplazar e ir al estado 26
    ID            desplazar e ir al estado 27
    PA            desplazar e ir al estado 28
    CONST_REAL    desplazar e ir al estado 29
    CONST_STRING  desplazar e ir al estado 30
    FIB           desplazar e ir al estado 32

    factor     ir al estado 81
    fibonacci  ir al estado 38


estado 63

   12 declaracion: INIT LA lista_declaracion LC .

    $default  reduce usando la regla 12 (declaracion)


estado 64

   13 lista_declaracion: lista_declaracion lista_id . DOS_PUNTOS tipo
   15 lista_id: lista_id . COMA ID

    DOS_PUNTOS  desplazar e ir al estado 82
    COMA        desplazar e ir al estado 66


estado 65

   14 lista_declaracion: lista_id DOS_PUNTOS . tipo

    INT     desplazar e ir al estado 83
    FLOAT   desplazar e ir al estado 84
    STRING  desplazar e ir al estado 85

    tipo  ir al estado 86


estado 66

   15 lista_id: lista_id COMA . ID

    ID  desplazar e ir al estado 87


estado 67

   20 read: READ PA ID PC .

    $default  reduce usando la regla 20 (read)


estado 68

   22 write: WRITE PA ID $@2 . PC

    PC  desplazar e ir al estado 88


estado 69

   24 write: WRITE PA CONST_STRING $@3 . PC

    PC  desplazar e ir al estado 89


estado 70

   26 ciclo: CICLO $@4 PA condicion PC . LA programa LC

    LA  desplazar e ir al estado 90


estado 71

   50 factor: PA expresion PC .

    $default  reduce usando la regla 50 (factor)


estado 72

   53 fibonacci: FIB PA CTE . $@5 PC

    $default  reduce usando la regla 52 ($@5)

    $@5  ir al estado 91


estado 73

   54 fibonacci: FIB PA ID . PC

    PC  desplazar e ir al estado 92


estado 74

   27 if: IF PA condicion PC LA . programa LC
   28   | IF PA condicion PC LA . programa FT ELSE LA programa LC

    ID     desplazar e ir al estado 1
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    programa     ir al estado 93
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    read         ir al estado 12
    write        ir al estado 13
    ciclo        ir al estado 14
    if           ir al estado 15


estado 75

   31 condicion: condicion AND comparacion .

    $default  reduce usando la regla 31 (condicion)


estado 76

   32 condicion: condicion OR comparacion .

    $default  reduce usando la regla 32 (condicion)


estado 77

   41 expresion: expresion OP_SUM termino .
   44 termino: termino . OP_MUL factor
   45        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 61
    OP_DIV  desplazar e ir al estado 62

    $default  reduce usando la regla 41 (expresion)


estado 78

   42 expresion: expresion OP_RES termino .
   44 termino: termino . OP_MUL factor
   45        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 61
    OP_DIV  desplazar e ir al estado 62

    $default  reduce usando la regla 42 (expresion)


estado 79

   34 comparacion: expresion comparador expresion .
   41 expresion: expresion . OP_SUM termino
   42          | expresion . OP_RES termino

    OP_SUM  desplazar e ir al estado 53
    OP_RES  desplazar e ir al estado 54

    $default  reduce usando la regla 34 (comparacion)


estado 80

   44 termino: termino OP_MUL factor .

    $default  reduce usando la regla 44 (termino)


estado 81

   45 termino: termino OP_DIV factor .

    $default  reduce usando la regla 45 (termino)


estado 82

   13 lista_declaracion: lista_declaracion lista_id DOS_PUNTOS . tipo

    INT     desplazar e ir al estado 83
    FLOAT   desplazar e ir al estado 84
    STRING  desplazar e ir al estado 85

    tipo  ir al estado 94


estado 83

   17 tipo: INT .

    $default  reduce usando la regla 17 (tipo)


estado 84

   18 tipo: FLOAT .

    $default  reduce usando la regla 18 (tipo)


estado 85

   19 tipo: STRING .

    $default  reduce usando la regla 19 (tipo)


estado 86

   14 lista_declaracion: lista_id DOS_PUNTOS tipo .

    $default  reduce usando la regla 14 (lista_declaracion)


estado 87

   15 lista_id: lista_id COMA ID .

    $default  reduce usando la regla 15 (lista_id)


estado 88

   22 write: WRITE PA ID $@2 PC .

    $default  reduce usando la regla 22 (write)


estado 89

   24 write: WRITE PA CONST_STRING $@3 PC .

    $default  reduce usando la regla 24 (write)


estado 90

   26 ciclo: CICLO $@4 PA condicion PC LA . programa LC

    ID     desplazar e ir al estado 1
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    programa     ir al estado 95
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    read         ir al estado 12
    write        ir al estado 13
    ciclo        ir al estado 14
    if           ir al estado 15


estado 91

   53 fibonacci: FIB PA CTE $@5 . PC

    PC  desplazar e ir al estado 96


estado 92

   54 fibonacci: FIB PA ID PC .

    $default  reduce usando la regla 54 (fibonacci)


estado 93

    3 programa: programa . sentencia
   27 if: IF PA condicion PC LA programa . LC
   28   | IF PA condicion PC LA programa . FT ELSE LA programa LC

    ID     desplazar e ir al estado 1
    LC     desplazar e ir al estado 97
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    sentencia    ir al estado 23
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    read         ir al estado 12
    write        ir al estado 13
    ciclo        ir al estado 14
    if           ir al estado 15
    FT           ir al estado 98


estado 94

   13 lista_declaracion: lista_declaracion lista_id DOS_PUNTOS tipo .

    $default  reduce usando la regla 13 (lista_declaracion)


estado 95

    3 programa: programa . sentencia
   26 ciclo: CICLO $@4 PA condicion PC LA programa . LC

    ID     desplazar e ir al estado 1
    LC     desplazar e ir al estado 99
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    sentencia    ir al estado 23
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    read         ir al estado 12
    write        ir al estado 13
    ciclo        ir al estado 14
    if           ir al estado 15


estado 96

   53 fibonacci: FIB PA CTE $@5 PC .

    $default  reduce usando la regla 53 (fibonacci)


estado 97

   27 if: IF PA condicion PC LA programa LC .
   29 FT: LC .

    ELSE      reduce usando la regla 29 (FT)
    $default  reduce usando la regla 27 (if)


estado 98

   28 if: IF PA condicion PC LA programa FT . ELSE LA programa LC

    ELSE  desplazar e ir al estado 100


estado 99

   26 ciclo: CICLO $@4 PA condicion PC LA programa LC .

    $default  reduce usando la regla 26 (ciclo)


estado 100

   28 if: IF PA condicion PC LA programa FT ELSE . LA programa LC

    LA  desplazar e ir al estado 101


estado 101

   28 if: IF PA condicion PC LA programa FT ELSE LA . programa LC

    ID     desplazar e ir al estado 1
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    programa     ir al estado 102
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    read         ir al estado 12
    write        ir al estado 13
    ciclo        ir al estado 14
    if           ir al estado 15


estado 102

    3 programa: programa . sentencia
   28 if: IF PA condicion PC LA programa FT ELSE LA programa . LC

    ID     desplazar e ir al estado 1
    LC     desplazar e ir al estado 103
    CICLO  desplazar e ir al estado 2
    IF     desplazar e ir al estado 3
    INIT   desplazar e ir al estado 4
    READ   desplazar e ir al estado 5
    WRITE  desplazar e ir al estado 6

    sentencia    ir al estado 23
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    read         ir al estado 12
    write        ir al estado 13
    ciclo        ir al estado 14
    if           ir al estado 15


estado 103

   28 if: IF PA condicion PC LA programa FT ELSE LA programa LC .

    $default  reduce usando la regla 28 (if)
